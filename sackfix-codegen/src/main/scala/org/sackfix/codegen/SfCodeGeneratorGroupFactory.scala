package org.sackfix.codegen

import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

/**
  * Created by Jonathan during 2016.
  */
class SfCodeGeneratorGroupFactory(val sourceXmlSpenFileName: String,
                                  val fieldsPackageName: String, val packageName: String,
                                  val cname: String,
                                  groups: Iterable[FixGroupDef]) {

  /**
    * For a field definition this generates the full class file.
    */
  def generateClassStr: String = {
    generateFileHeader + generateGroupCreator
  }

  private def generateGroupCreator: String = {
    s"""object $cname {
        |  def getGroup(t:Int):Option[SfFixDecoder] = {
        |    t match {
        |${
      groups.map(groupDef => {
        val fname = groupDef.name + "Field"
        //         case k@BeginStringField.TagId => BeginStringField.decode(fld._2)
        s"      case $fname.TagId => Some(${groupDef.generatedClassName})"
      }).mkString("\n")
    }
        |      case _ => None
        |    }
        |  }
        |}
        |""".stripMargin
  }

  private def generateFileHeader: String = {
    s"""package $packageName
        |
          |import $fieldsPackageName._
        |import org.sackfix.common.validated.fields.SfFixGroup
        |import org.sackfix.common.message.HopsGroup
        |
          |/**
        |  * Generated by SackFix code generator on ${DateTimeFormatter.BASIC_ISO_DATE.format(LocalDateTime.now())}
        |  * Source specification was read from:
        |  *   $sourceXmlSpenFileName
        |  */
        |""".stripMargin
  }


}
