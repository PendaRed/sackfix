package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class PartyIDSourceField(override val value: String) extends SfFieldString(447, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(447)PartyIDSource=(").append(value).append(")").append(PartyIDSourceField.fixDescriptionByValue.getOrElse(value,""))
}

object PartyIDSourceField {
  val TagId = 447 
  val KoreanInvestorId="1"
  val TaiwaneseQualifiedForeignInvestorIdQfiiFid="2"
  val TaiwaneseTradingAccount="3"
  val MalaysianCentralDepositoryNumber="4"
  val ChineseBShare="5"
  val UkNationalInsuranceOrPensionNumber="6"
  val UsSocialSecurityNumber="7"
  val UsEmployerIdentificationNumber="8"
  val AustralianBusinessNumber="9"
  val AustralianTaxFileNumber="A"
  val Bic="B"
  val GenerallyAcceptedMarketParticipantIdentifier="C"
  val ProprietaryCustomCode="D"
  val IsoCountryCode="E"
  val SettlementEntityLocation="F"
  val Mic="G"
  val CsdParticipantMemberCode="H"
  val DirectedBroker="I"
  lazy val fixDescriptionByValue = Map("1"->"KOREAN_INVESTOR_ID","2"->"TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID",
    "3"->"TAIWANESE_TRADING_ACCOUNT","4"->"MALAYSIAN_CENTRAL_DEPOSITORY_NUMBER","5"->"CHINESE_B_SHARE",
    "6"->"UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER","7"->"US_SOCIAL_SECURITY_NUMBER","8"->"US_EMPLOYER_IDENTIFICATION_NUMBER",
    "9"->"AUSTRALIAN_BUSINESS_NUMBER","A"->"AUSTRALIAN_TAX_FILE_NUMBER","B"->"BIC",
    "C"->"GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER","D"->"PROPRIETARY_CUSTOM_CODE","E"->"ISO_COUNTRY_CODE",
    "F"->"SETTLEMENT_ENTITY_LOCATION","G"->"MIC","H"->"CSD_PARTICIPANT_MEMBER_CODE",
    "I"->"DIRECTED_BROKER")
 
  def decode(a: Option[Any]) : Option[PartyIDSourceField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[PartyIDSourceField]
  }

  def decode(a: Any) : Option[PartyIDSourceField] = a match {
    case v: String => Some(PartyIDSourceField(v))
    case v: Char => Some(PartyIDSourceField(v.toString))
    case v: PartyIDSourceField => Some(v)
    case _ => scala.Option.empty[PartyIDSourceField]
  } 
}
