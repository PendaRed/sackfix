package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class MoneyLaunderingStatusField(override val value: String) extends SfFieldString(481, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(481)MoneyLaunderingStatus=(").append(value).append(")").append(MoneyLaunderingStatusField.fixDescriptionByValue.getOrElse(value,""))
}

object MoneyLaunderingStatusField {
  val TagId = 481 
  val Passed="Y"
  val NotChecked="N"
  val ExemptBelowTheLimit="1"
  val ExemptClientMoneyTypeExemption="2"
  val ExemptAuthorisedCreditOrFinancialInstitution="3"
  lazy val fixDescriptionByValue = Map("Y"->"PASSED","N"->"NOT_CHECKED",
    "1"->"EXEMPT_BELOW_THE_LIMIT","2"->"EXEMPT_CLIENT_MONEY_TYPE_EXEMPTION","3"->"EXEMPT_AUTHORISED_CREDIT_OR_FINANCIAL_INSTITUTION")
 
  def decode(a: Option[Any]) : Option[MoneyLaunderingStatusField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[MoneyLaunderingStatusField]
  }

  def decode(a: Any) : Option[MoneyLaunderingStatusField] = a match {
    case v: String => Some(MoneyLaunderingStatusField(v))
    case v: Char => Some(MoneyLaunderingStatusField(v.toString))
    case v: MoneyLaunderingStatusField => Some(v)
    case _ => scala.Option.empty[MoneyLaunderingStatusField]
  } 
}
