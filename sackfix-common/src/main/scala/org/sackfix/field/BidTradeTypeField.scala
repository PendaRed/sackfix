package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class BidTradeTypeField(override val value: String) extends SfFieldString(418, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(418)BidTradeType=(").append(value).append(")").append(BidTradeTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object BidTradeTypeField {
  val TagId = 418 
  val Agency="A"
  val VwapGuarantee="G"
  val GuaranteedClose="J"
  val RiskTrade="R"
  lazy val fixDescriptionByValue = Map("A"->"AGENCY","G"->"VWAP_GUARANTEE",
    "J"->"GUARANTEED_CLOSE","R"->"RISK_TRADE")
 
  def decode(a: Option[Any]) : Option[BidTradeTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[BidTradeTypeField]
  }

  def decode(a: Any) : Option[BidTradeTypeField] = a match {
    case v: String => Some(BidTradeTypeField(v))
    case v: Char => Some(BidTradeTypeField(v.toString))
    case v: BidTradeTypeField => Some(v)
    case _ => scala.Option.empty[BidTradeTypeField]
  } 
}
