package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class CashMarginField(override val value: String) extends SfFieldString(544, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(544)CashMargin=(").append(value).append(")").append(CashMarginField.fixDescriptionByValue.getOrElse(value,""))
}

object CashMarginField {
  val TagId = 544 
  val Cash="1"
  val MarginOpen="2"
  val MarginClose="3"
  lazy val fixDescriptionByValue = Map("1"->"CASH","2"->"MARGIN_OPEN",
    "3"->"MARGIN_CLOSE")
 
  def decode(a: Option[Any]) : Option[CashMarginField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[CashMarginField]
  }

  def decode(a: Any) : Option[CashMarginField] = a match {
    case v: String => Some(CashMarginField(v))
    case v: Char => Some(CashMarginField(v.toString))
    case v: CashMarginField => Some(v)
    case _ => scala.Option.empty[CashMarginField]
  } 
}
