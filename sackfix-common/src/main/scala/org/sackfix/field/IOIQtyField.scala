package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class IOIQtyField(override val value: String) extends SfFieldString(27, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(27)IOIQty=(").append(value).append(")").append(IOIQtyField.fixDescriptionByValue.getOrElse(value,""))
}

object IOIQtyField {
  val TagId = 27 
  val _1000000000="0"
  val Small="S"
  val Medium="M"
  val Large="L"
  val UndisclosedQuantity="U"
  lazy val fixDescriptionByValue = Map("0"->"_1000000000","S"->"SMALL",
    "M"->"MEDIUM","L"->"LARGE","U"->"UNDISCLOSED_QUANTITY")
 
  def decode(a: Option[Any]) : Option[IOIQtyField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[IOIQtyField]
  }

  def decode(a: Any) : Option[IOIQtyField] = a match {
    case v: String => Some(IOIQtyField(v))
    case v: IOIQtyField => Some(v)
    case _ => scala.Option.empty[IOIQtyField]
  } 
}
