package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class OwnershipTypeField(override val value: String) extends SfFieldString(517, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(517)OwnershipType=(").append(value).append(")").append(OwnershipTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object OwnershipTypeField {
  val TagId = 517 
  val JointInvestors="J"
  val TenantsInCommon="T"
  val JointTrustees="2"
  lazy val fixDescriptionByValue = Map("J"->"JOINT_INVESTORS","T"->"TENANTS_IN_COMMON",
    "2"->"JOINT_TRUSTEES")
 
  def decode(a: Option[Any]) : Option[OwnershipTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[OwnershipTypeField]
  }

  def decode(a: Any) : Option[OwnershipTypeField] = a match {
    case v: String => Some(OwnershipTypeField(v))
    case v: Char => Some(OwnershipTypeField(v.toString))
    case v: OwnershipTypeField => Some(v)
    case _ => scala.Option.empty[OwnershipTypeField]
  } 
}
