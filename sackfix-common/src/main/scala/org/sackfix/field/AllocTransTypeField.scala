package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class AllocTransTypeField(override val value: String) extends SfFieldString(71, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(71)AllocTransType=(").append(value).append(")").append(AllocTransTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object AllocTransTypeField {
  val TagId = 71 
  val New="0"
  val Replace="1"
  val Cancel="2"
  val Preliminary="3"
  val Calculated="4"
  val CalculatedWithoutPreliminary="5"
  val Reversal="6"
  lazy val fixDescriptionByValue = Map("0"->"NEW","1"->"REPLACE",
    "2"->"CANCEL","3"->"PRELIMINARY","4"->"CALCULATED",
    "5"->"CALCULATED_WITHOUT_PRELIMINARY","6"->"REVERSAL")
 
  def decode(a: Option[Any]) : Option[AllocTransTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[AllocTransTypeField]
  }

  def decode(a: Any) : Option[AllocTransTypeField] = a match {
    case v: String => Some(AllocTransTypeField(v))
    case v: Char => Some(AllocTransTypeField(v.toString))
    case v: AllocTransTypeField => Some(v)
    case _ => scala.Option.empty[AllocTransTypeField]
  } 
}
