package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class SettlObligTransTypeField(override val value: String) extends SfFieldString(1162, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1162)SettlObligTransType=(").append(value).append(")").append(SettlObligTransTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object SettlObligTransTypeField {
  val TagId = 1162 
  val Cancel="C"
  val New="N"
  val Replace="R"
  val Restate="T"
  lazy val fixDescriptionByValue = Map("C"->"CANCEL","N"->"NEW",
    "R"->"REPLACE","T"->"RESTATE")
 
  def decode(a: Option[Any]) : Option[SettlObligTransTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[SettlObligTransTypeField]
  }

  def decode(a: Any) : Option[SettlObligTransTypeField] = a match {
    case v: String => Some(SettlObligTransTypeField(v))
    case v: Char => Some(SettlObligTransTypeField(v.toString))
    case v: SettlObligTransTypeField => Some(v)
    case _ => scala.Option.empty[SettlObligTransTypeField]
  } 
}
