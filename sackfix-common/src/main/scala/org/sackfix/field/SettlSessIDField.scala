package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class SettlSessIDField(override val value: String) extends SfFieldString(716, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(716)SettlSessID=(").append(value).append(")").append(SettlSessIDField.fixDescriptionByValue.getOrElse(value,""))
}

object SettlSessIDField {
  val TagId = 716 
  val Intraday="ITD"
  val RegularTradingHours="RTH"
  val ElectronicTradingHours="ETH"
  val EndOfDay="EOD"
  lazy val fixDescriptionByValue = Map("ITD"->"INTRADAY","RTH"->"REGULAR_TRADING_HOURS",
    "ETH"->"ELECTRONIC_TRADING_HOURS","EOD"->"END_OF_DAY")
 
  def decode(a: Option[Any]) : Option[SettlSessIDField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[SettlSessIDField]
  }

  def decode(a: Any) : Option[SettlSessIDField] = a match {
    case v: String => Some(SettlSessIDField(v))
    case v: SettlSessIDField => Some(v)
    case _ => scala.Option.empty[SettlSessIDField]
  } 
}
