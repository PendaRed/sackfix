package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170521
  */
case class SeniorityField(override val value: String) extends SfFieldString(1450, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1450)Seniority=(").append(value).append(")").append(SeniorityField.fixDescriptionByValue.getOrElse(value,""))
}

object SeniorityField {
  val TagId = 1450 
  val SeniorSecured="SD"
  val Senior="SR"
  val Subordinated="SB"
  lazy val fixDescriptionByValue = Map("SD"->"SENIOR_SECURED","SR"->"SENIOR",
    "SB"->"SUBORDINATED")
 
  def decode(a: Option[Any]) : Option[SeniorityField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[SeniorityField]
  }

  def decode(a: Any) : Option[SeniorityField] = a match {
    case v: String => Some(SeniorityField(v))
    case v: SeniorityField => Some(v)
    case _ => scala.Option.empty[SeniorityField]
  } 
}
