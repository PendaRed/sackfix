package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170521
  */
case class ExecAckStatusField(override val value: String) extends SfFieldString(1036, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1036)ExecAckStatus=(").append(value).append(")").append(ExecAckStatusField.fixDescriptionByValue.getOrElse(value,""))
}

object ExecAckStatusField {
  val TagId = 1036 
  val ReceivedNotYetProcessed="0"
  val Accepted="1"
  val DontKnow="2"
  lazy val fixDescriptionByValue = Map("0"->"RECEIVED_NOT_YET_PROCESSED","1"->"ACCEPTED",
    "2"->"DONT_KNOW")
 
  def decode(a: Option[Any]) : Option[ExecAckStatusField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[ExecAckStatusField]
  }

  def decode(a: Any) : Option[ExecAckStatusField] = a match {
    case v: String => Some(ExecAckStatusField(v))
    case v: Char => Some(ExecAckStatusField(v.toString))
    case v: ExecAckStatusField => Some(v)
    case _ => scala.Option.empty[ExecAckStatusField]
  } 
}
