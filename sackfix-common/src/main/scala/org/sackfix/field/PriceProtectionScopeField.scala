package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class PriceProtectionScopeField(override val value: String) extends SfFieldString(1092, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1092)PriceProtectionScope=(").append(value).append(")").append(PriceProtectionScopeField.fixDescriptionByValue.getOrElse(value,""))
}

object PriceProtectionScopeField {
  val TagId = 1092 
  val None="0"
  val Local="1"
  val National="2"
  val Global="3"
  lazy val fixDescriptionByValue = Map("0"->"NONE","1"->"LOCAL",
    "2"->"NATIONAL","3"->"GLOBAL")
 
  def decode(a: Option[Any]) : Option[PriceProtectionScopeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[PriceProtectionScopeField]
  }

  def decode(a: Any) : Option[PriceProtectionScopeField] = a match {
    case v: String => Some(PriceProtectionScopeField(v))
    case v: Char => Some(PriceProtectionScopeField(v.toString))
    case v: PriceProtectionScopeField => Some(v)
    case _ => scala.Option.empty[PriceProtectionScopeField]
  } 
}
