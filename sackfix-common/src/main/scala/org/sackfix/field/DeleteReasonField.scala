package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class DeleteReasonField(override val value: String) extends SfFieldString(285, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(285)DeleteReason=(").append(value).append(")").append(DeleteReasonField.fixDescriptionByValue.getOrElse(value,""))
}

object DeleteReasonField {
  val TagId = 285 
  val CancelationTradeBust="0"
  val Error="1"
  lazy val fixDescriptionByValue = Map("0"->"CANCELATION_TRADE_BUST","1"->"ERROR")
 
  def decode(a: Option[Any]) : Option[DeleteReasonField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[DeleteReasonField]
  }

  def decode(a: Any) : Option[DeleteReasonField] = a match {
    case v: String => Some(DeleteReasonField(v))
    case v: Char => Some(DeleteReasonField(v.toString))
    case v: DeleteReasonField => Some(v)
    case _ => scala.Option.empty[DeleteReasonField]
  } 
}
