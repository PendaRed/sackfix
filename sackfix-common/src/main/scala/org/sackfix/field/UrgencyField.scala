package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class UrgencyField(override val value: String) extends SfFieldString(61, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(61)Urgency=(").append(value).append(")").append(UrgencyField.fixDescriptionByValue.getOrElse(value,""))
}

object UrgencyField {
  val TagId = 61 
  val Normal="0"
  val Flash="1"
  val Background="2"
  lazy val fixDescriptionByValue = Map("0"->"NORMAL","1"->"FLASH",
    "2"->"BACKGROUND")
 
  def decode(a: Option[Any]) : Option[UrgencyField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[UrgencyField]
  }

  def decode(a: Any) : Option[UrgencyField] = a match {
    case v: String => Some(UrgencyField(v))
    case v: Char => Some(UrgencyField(v.toString))
    case v: UrgencyField => Some(v)
    case _ => scala.Option.empty[UrgencyField]
  } 
}
