package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170521
  */
case class HandlInstField(override val value: String) extends SfFieldString(21, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(21)HandlInst=(").append(value).append(")").append(HandlInstField.fixDescriptionByValue.getOrElse(value,""))
}

object HandlInstField {
  val TagId = 21 
  val AutomatedExecutionOrderPrivate="1"
  val AutomatedExecutionOrderPublic="2"
  val ManualOrder="3"
  lazy val fixDescriptionByValue = Map("1"->"AUTOMATED_EXECUTION_ORDER_PRIVATE","2"->"AUTOMATED_EXECUTION_ORDER_PUBLIC",
    "3"->"MANUAL_ORDER")
 
  def decode(a: Option[Any]) : Option[HandlInstField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[HandlInstField]
  }

  def decode(a: Any) : Option[HandlInstField] = a match {
    case v: String => Some(HandlInstField(v))
    case v: Char => Some(HandlInstField(v.toString))
    case v: HandlInstField => Some(v)
    case _ => scala.Option.empty[HandlInstField]
  } 
}
