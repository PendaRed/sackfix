package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldInt

/**
  * Generated by SackFix code generator on 20170521
  */
case class TrdRptStatusField(override val value: Int) extends SfFieldInt(939, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(939)TrdRptStatus=(").append(value).append(")").append(TrdRptStatusField.fixDescriptionByValue.getOrElse(value,""))
}

object TrdRptStatusField {
  val TagId = 939 
  val Accepted=0
  val Rejected=1
  val AcceptedWithErrors=3
  lazy val fixDescriptionByValue = Map(0->"ACCEPTED",1->"REJECTED",
    3->"ACCEPTED_WITH_ERRORS")
 
  def apply(value: String) = try {
    new TrdRptStatusField(value.toInt)
  } catch {
    case ex: Exception => throw new IllegalArgumentException("new TrdRptStatus("+value.toString+") failed with exception", ex)
  } 
  def decode(a: Option[Any]) : Option[TrdRptStatusField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[TrdRptStatusField]
  }

  def decode(a: Any) : Option[TrdRptStatusField] = a match {
    case v: String => Some(TrdRptStatusField(v))
    case v: Int => Some(TrdRptStatusField(v))
    case v: TrdRptStatusField => Some(v)
    case _ => scala.Option.empty[TrdRptStatusField]
  } 
}
