package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170521
  */
case class TriggerActionField(override val value: String) extends SfFieldString(1101, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1101)TriggerAction=(").append(value).append(")").append(TriggerActionField.fixDescriptionByValue.getOrElse(value,""))
}

object TriggerActionField {
  val TagId = 1101 
  val Activate="1"
  val Modify="2"
  val Cancel="3"
  lazy val fixDescriptionByValue = Map("1"->"ACTIVATE","2"->"MODIFY",
    "3"->"CANCEL")
 
  def decode(a: Option[Any]) : Option[TriggerActionField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[TriggerActionField]
  }

  def decode(a: Any) : Option[TriggerActionField] = a match {
    case v: String => Some(TriggerActionField(v))
    case v: Char => Some(TriggerActionField(v.toString))
    case v: TriggerActionField => Some(v)
    case _ => scala.Option.empty[TriggerActionField]
  } 
}
