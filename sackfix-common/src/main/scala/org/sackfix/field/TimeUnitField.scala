package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class TimeUnitField(override val value: String) extends SfFieldString(997, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(997)TimeUnit=(").append(value).append(")").append(TimeUnitField.fixDescriptionByValue.getOrElse(value,""))
}

object TimeUnitField {
  val TagId = 997 
  val Second="S"
  val Minute="Min"
  val Hour="H"
  val Day="D"
  val Week="Wk"
  val Month="Mo"
  val Year="Yr"
  lazy val fixDescriptionByValue = Map("S"->"SECOND","Min"->"MINUTE",
    "H"->"HOUR","D"->"DAY","Wk"->"WEEK",
    "Mo"->"MONTH","Yr"->"YEAR")
 
  def decode(a: Option[Any]) : Option[TimeUnitField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[TimeUnitField]
  }

  def decode(a: Any) : Option[TimeUnitField] = a match {
    case v: String => Some(TimeUnitField(v))
    case v: TimeUnitField => Some(v)
    case _ => scala.Option.empty[TimeUnitField]
  } 
}
