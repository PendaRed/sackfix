package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class UnderlyingCashTypeField(override val value: String) extends SfFieldString(974, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(974)UnderlyingCashType=(").append(value).append(")").append(UnderlyingCashTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object UnderlyingCashTypeField {
  val TagId = 974 
  val Fixed="FIXED"
  val Diff="DIFF"
  lazy val fixDescriptionByValue = Map("FIXED"->"FIXED","DIFF"->"DIFF")
 
  def decode(a: Option[Any]) : Option[UnderlyingCashTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[UnderlyingCashTypeField]
  }

  def decode(a: Any) : Option[UnderlyingCashTypeField] = a match {
    case v: String => Some(UnderlyingCashTypeField(v))
    case v: UnderlyingCashTypeField => Some(v)
    case _ => scala.Option.empty[UnderlyingCashTypeField]
  } 
}
