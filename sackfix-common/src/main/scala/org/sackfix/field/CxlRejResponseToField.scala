package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170521
  */
case class CxlRejResponseToField(override val value: String) extends SfFieldString(434, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(434)CxlRejResponseTo=(").append(value).append(")").append(CxlRejResponseToField.fixDescriptionByValue.getOrElse(value,""))
}

object CxlRejResponseToField {
  val TagId = 434 
  val OrderCancelRequest="1"
  val OrderCancelReplaceRequest="2"
  lazy val fixDescriptionByValue = Map("1"->"ORDER_CANCEL_REQUEST","2"->"ORDER_CANCEL_REPLACE_REQUEST")
 
  def decode(a: Option[Any]) : Option[CxlRejResponseToField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[CxlRejResponseToField]
  }

  def decode(a: Any) : Option[CxlRejResponseToField] = a match {
    case v: String => Some(CxlRejResponseToField(v))
    case v: Char => Some(CxlRejResponseToField(v.toString))
    case v: CxlRejResponseToField => Some(v)
    case _ => scala.Option.empty[CxlRejResponseToField]
  } 
}
