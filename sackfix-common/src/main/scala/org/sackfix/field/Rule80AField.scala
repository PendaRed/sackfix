package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class Rule80AField(override val value: String) extends SfFieldString(47, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(47)Rule80A=(").append(value).append(")").append(Rule80AField.fixDescriptionByValue.getOrElse(value,""))
}

object Rule80AField {
  val TagId = 47 
  val AgencySingleOrder="A"
  val ProgramOrderIndexArbForMemberFirmorg="D"
  val ProgramOrderNonindexArbForMemberFirmorg="C"
  val IndividualInvestor="I"
  val ProgramOrderIndexArbForIndividualCustomer="J"
  val ProgramOrderNonindexArbForIndividualCustomer="K"
  val ProgramOrderIndexArbForOtherAgency="U"
  val ProgramOrderNonindexArbForOtherAgency="Y"
  val ProgramOrderIndexArbForOtherMember="M"
  val ProgramOrderNonindexArbForOtherMember="N"
  val AllOtherOrdersAsAgentForOtherMember="W"
  lazy val fixDescriptionByValue = Map("A"->"AGENCY_SINGLE_ORDER","D"->"PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRMORG",
    "C"->"PROGRAM_ORDER_NONINDEX_ARB_FOR_MEMBER_FIRMORG","I"->"INDIVIDUAL_INVESTOR","J"->"PROGRAM_ORDER_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER",
    "K"->"PROGRAM_ORDER_NONINDEX_ARB_FOR_INDIVIDUAL_CUSTOMER","U"->"PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_AGENCY","Y"->"PROGRAM_ORDER_NONINDEX_ARB_FOR_OTHER_AGENCY",
    "M"->"PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_MEMBER","N"->"PROGRAM_ORDER_NONINDEX_ARB_FOR_OTHER_MEMBER","W"->"ALL_OTHER_ORDERS_AS_AGENT_FOR_OTHER_MEMBER")
 
  def decode(a: Option[Any]) : Option[Rule80AField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[Rule80AField]
  }

  def decode(a: Any) : Option[Rule80AField] = a match {
    case v: String => Some(Rule80AField(v))
    case v: Rule80AField => Some(v)
    case _ => scala.Option.empty[Rule80AField]
  } 
}
