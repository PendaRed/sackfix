package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class SecurityUpdateActionField(override val value: String) extends SfFieldString(980, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(980)SecurityUpdateAction=(").append(value).append(")").append(SecurityUpdateActionField.fixDescriptionByValue.getOrElse(value,""))
}

object SecurityUpdateActionField {
  val TagId = 980 
  val Add="A"
  val Delete="D"
  val Modify="M"
  lazy val fixDescriptionByValue = Map("A"->"ADD","D"->"DELETE",
    "M"->"MODIFY")
 
  def decode(a: Option[Any]) : Option[SecurityUpdateActionField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[SecurityUpdateActionField]
  }

  def decode(a: Any) : Option[SecurityUpdateActionField] = a match {
    case v: String => Some(SecurityUpdateActionField(v))
    case v: Char => Some(SecurityUpdateActionField(v.toString))
    case v: SecurityUpdateActionField => Some(v)
    case _ => scala.Option.empty[SecurityUpdateActionField]
  } 
}
