package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class BasisPxTypeField(override val value: String) extends SfFieldString(419, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(419)BasisPxType=(").append(value).append(")").append(BasisPxTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object BasisPxTypeField {
  val TagId = 419 
  val ClosingPriceAtMorningSession="2"
  val ClosingPrice="3"
  val CurrentPrice="4"
  val Sq="5"
  val VwapThroughADay="6"
  val VwapThroughAMorningSession="7"
  val VwapThroughAnAfternoonSession="8"
  val VwapThroughADayExceptYori="9"
  val VwapThroughAMorningSessionExceptYori="A"
  val VwapThroughAnAfternoonSessionExceptYori="B"
  val Strike="C"
  val Open="D"
  val Others="Z"
  lazy val fixDescriptionByValue = Map("2"->"CLOSING_PRICE_AT_MORNING_SESSION","3"->"CLOSING_PRICE",
    "4"->"CURRENT_PRICE","5"->"SQ","6"->"VWAP_THROUGH_A_DAY",
    "7"->"VWAP_THROUGH_A_MORNING_SESSION","8"->"VWAP_THROUGH_AN_AFTERNOON_SESSION","9"->"VWAP_THROUGH_A_DAY_EXCEPT_YORI",
    "A"->"VWAP_THROUGH_A_MORNING_SESSION_EXCEPT_YORI","B"->"VWAP_THROUGH_AN_AFTERNOON_SESSION_EXCEPT_YORI","C"->"STRIKE",
    "D"->"OPEN","Z"->"OTHERS")
 
  def decode(a: Option[Any]) : Option[BasisPxTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[BasisPxTypeField]
  }

  def decode(a: Any) : Option[BasisPxTypeField] = a match {
    case v: String => Some(BasisPxTypeField(v))
    case v: Char => Some(BasisPxTypeField(v.toString))
    case v: BasisPxTypeField => Some(v)
    case _ => scala.Option.empty[BasisPxTypeField]
  } 
}
