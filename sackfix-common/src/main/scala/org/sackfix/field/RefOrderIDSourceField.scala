package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class RefOrderIDSourceField(override val value: String) extends SfFieldString(1081, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1081)RefOrderIDSource=(").append(value).append(")").append(RefOrderIDSourceField.fixDescriptionByValue.getOrElse(value,""))
}

object RefOrderIDSourceField {
  val TagId = 1081 
  val Secondaryordeid="0"
  val Ordeid="1"
  val Mentryid="2"
  val Quotentryid="3"
  lazy val fixDescriptionByValue = Map("0"->"SECONDARYORDEID","1"->"ORDEID",
    "2"->"MENTRYID","3"->"QUOTENTRYID")
 
  def decode(a: Option[Any]) : Option[RefOrderIDSourceField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[RefOrderIDSourceField]
  }

  def decode(a: Any) : Option[RefOrderIDSourceField] = a match {
    case v: String => Some(RefOrderIDSourceField(v))
    case v: Char => Some(RefOrderIDSourceField(v.toString))
    case v: RefOrderIDSourceField => Some(v)
    case _ => scala.Option.empty[RefOrderIDSourceField]
  } 
}
