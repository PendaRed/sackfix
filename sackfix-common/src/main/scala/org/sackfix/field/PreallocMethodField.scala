package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class PreallocMethodField(override val value: String) extends SfFieldString(591, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(591)PreallocMethod=(").append(value).append(")").append(PreallocMethodField.fixDescriptionByValue.getOrElse(value,""))
}

object PreallocMethodField {
  val TagId = 591 
  val ProRata="0"
  val DoNotProRata="1"
  lazy val fixDescriptionByValue = Map("0"->"PRO_RATA","1"->"DO_NOT_PRO_RATA")
 
  def decode(a: Option[Any]) : Option[PreallocMethodField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[PreallocMethodField]
  }

  def decode(a: Any) : Option[PreallocMethodField] = a match {
    case v: String => Some(PreallocMethodField(v))
    case v: Char => Some(PreallocMethodField(v.toString))
    case v: PreallocMethodField => Some(v)
    case _ => scala.Option.empty[PreallocMethodField]
  } 
}
