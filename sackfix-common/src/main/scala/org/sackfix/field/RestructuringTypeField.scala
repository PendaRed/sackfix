package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class RestructuringTypeField(override val value: String) extends SfFieldString(1449, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1449)RestructuringType=(").append(value).append(")").append(RestructuringTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object RestructuringTypeField {
  val TagId = 1449 
  val FullRestructuring="FR"
  val ModifiedRestructuring="MR"
  val ModifiedModRestructuring="MM"
  val NoRestructuringSpecified="XR"
  lazy val fixDescriptionByValue = Map("FR"->"FULL_RESTRUCTURING","MR"->"MODIFIED_RESTRUCTURING",
    "MM"->"MODIFIED_MOD_RESTRUCTURING","XR"->"NO_RESTRUCTURING_SPECIFIED")
 
  def decode(a: Option[Any]) : Option[RestructuringTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[RestructuringTypeField]
  }

  def decode(a: Any) : Option[RestructuringTypeField] = a match {
    case v: String => Some(RestructuringTypeField(v))
    case v: RestructuringTypeField => Some(v)
    case _ => scala.Option.empty[RestructuringTypeField]
  } 
}
