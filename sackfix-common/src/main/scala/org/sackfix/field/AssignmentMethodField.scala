package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class AssignmentMethodField(override val value: String) extends SfFieldString(744, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(744)AssignmentMethod=(").append(value).append(")").append(AssignmentMethodField.fixDescriptionByValue.getOrElse(value,""))
}

object AssignmentMethodField {
  val TagId = 744 
  val Random="R"
  val Prorata="P"
  lazy val fixDescriptionByValue = Map("R"->"RANDOM","P"->"PRORATA")
 
  def decode(a: Option[Any]) : Option[AssignmentMethodField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[AssignmentMethodField]
  }

  def decode(a: Any) : Option[AssignmentMethodField] = a match {
    case v: String => Some(AssignmentMethodField(v))
    case v: Char => Some(AssignmentMethodField(v.toString))
    case v: AssignmentMethodField => Some(v)
    case _ => scala.Option.empty[AssignmentMethodField]
  } 
}
