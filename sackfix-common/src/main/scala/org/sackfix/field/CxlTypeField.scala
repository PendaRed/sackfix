package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class CxlTypeField(override val value: String) extends SfFieldString(125, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(125)CxlType=(").append(value).append(")").append(CxlTypeField.fixDescriptionByValue.getOrElse(value,""))
}

object CxlTypeField {
  val TagId = 125 
  val PartialCancel="P"
  val FullRemainingQuantity="F"
  lazy val fixDescriptionByValue = Map("P"->"PARTIAL_CANCEL","F"->"FULL_REMAINING_QUANTITY")
 
  def decode(a: Option[Any]) : Option[CxlTypeField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[CxlTypeField]
  }

  def decode(a: Any) : Option[CxlTypeField] = a match {
    case v: String => Some(CxlTypeField(v))
    case v: Char => Some(CxlTypeField(v.toString))
    case v: CxlTypeField => Some(v)
    case _ => scala.Option.empty[CxlTypeField]
  } 
}
