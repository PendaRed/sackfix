package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170404
  */
case class FinancialStatusField(override val value: String) extends SfFieldString(291, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(291)FinancialStatus=(").append(value).append(")").append(FinancialStatusField.fixDescriptionByValue.getOrElse(value,""))
}

object FinancialStatusField {
  val TagId = 291 
  val Bankrupt="1"
  val PendingDelisting="2"
  val Restricted="3"
  lazy val fixDescriptionByValue = Map("1"->"BANKRUPT","2"->"PENDING_DELISTING",
    "3"->"RESTRICTED")
 
  def decode(a: Option[Any]) : Option[FinancialStatusField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[FinancialStatusField]
  }

  def decode(a: Any) : Option[FinancialStatusField] = a match {
    case v: String => Some(FinancialStatusField(v))
    case v: FinancialStatusField => Some(v)
    case _ => scala.Option.empty[FinancialStatusField]
  } 
}
