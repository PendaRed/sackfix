package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class ApplVerIDField(override val value: String) extends SfFieldString(1128, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1128)ApplVerID=(").append(value).append(")").append(ApplVerIDField.fixDescriptionByValue.getOrElse(value,""))
}

object ApplVerIDField {
  val TagId = 1128 
  val Fix27="0"
  val Fix30="1"
  val Fix40="2"
  val Fix41="3"
  val Fix42="4"
  val Fix43="5"
  val Fix44="6"
  val Fix50="7"
  val Fix50sp1="8"
  val Fix50sp2="9"
  lazy val fixDescriptionByValue = Map("0"->"FIX27","1"->"FIX30",
    "2"->"FIX40","3"->"FIX41","4"->"FIX42",
    "5"->"FIX43","6"->"FIX44","7"->"FIX50",
    "8"->"FIX50SP1","9"->"FIX50SP2")
 
  def decode(a: Option[Any]) : Option[ApplVerIDField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[ApplVerIDField]
  }

  def decode(a: Any) : Option[ApplVerIDField] = a match {
    case v: String => Some(ApplVerIDField(v))
    case v: ApplVerIDField => Some(v)
    case _ => scala.Option.empty[ApplVerIDField]
  } 
}
