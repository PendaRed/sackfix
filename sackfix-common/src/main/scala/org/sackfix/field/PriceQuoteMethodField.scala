package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20170521
  */
case class PriceQuoteMethodField(override val value: String) extends SfFieldString(1196, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1196)PriceQuoteMethod=(").append(value).append(")").append(PriceQuoteMethodField.fixDescriptionByValue.getOrElse(value,""))
}

object PriceQuoteMethodField {
  val TagId = 1196 
  val StandardMoneyPerUnitOfAPhysical="STD"
  val Index="INX"
  val InterestRateIndex="INT"
  lazy val fixDescriptionByValue = Map("STD"->"STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL","INX"->"INDEX",
    "INT"->"INTEREST_RATE_INDEX")
 
  def decode(a: Option[Any]) : Option[PriceQuoteMethodField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[PriceQuoteMethodField]
  }

  def decode(a: Any) : Option[PriceQuoteMethodField] = a match {
    case v: String => Some(PriceQuoteMethodField(v))
    case v: PriceQuoteMethodField => Some(v)
    case _ => scala.Option.empty[PriceQuoteMethodField]
  } 
}
