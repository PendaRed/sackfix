package org.sackfix.field

import org.sackfix.common.validated.fields.SfFieldString

/**
  * Generated by SackFix code generator on 20210314
  */
case class DisplayWhenField(override val value: String) extends SfFieldString(1083, value) {
  override def toString = appendStringBuilder().toString
  override def appendStringBuilder(b:StringBuilder = new StringBuilder()) = b.append("(1083)DisplayWhen=(").append(value).append(")").append(DisplayWhenField.fixDescriptionByValue.getOrElse(value,""))
}

object DisplayWhenField {
  val TagId = 1083 
  val Immediate="1"
  val Exhaust="2"
  lazy val fixDescriptionByValue = Map("1"->"IMMEDIATE","2"->"EXHAUST")
 
  def decode(a: Option[Any]) : Option[DisplayWhenField] = a match {
    case Some(v) => decode(v)
    case _ =>  scala.Option.empty[DisplayWhenField]
  }

  def decode(a: Any) : Option[DisplayWhenField] = a match {
    case v: String => Some(DisplayWhenField(v))
    case v: Char => Some(DisplayWhenField(v.toString))
    case v: DisplayWhenField => Some(v)
    case _ => scala.Option.empty[DisplayWhenField]
  } 
}
